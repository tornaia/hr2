jdbc.driverClassName			        = com.mysql.jdbc.Driver
jdbc.url						        = jdbc:mysql://192.168.201.128:3306/hr_hudson_mysql?useUnicode=true&characterEncoding=utf8
jdbc.username					        = hr_hudson_mysql
jdbc.password					        = hr_hudson_mysql

jpa.platform				        	= org.hibernate.dialect.H2Dialect
jpa.generateDdl 				        = false
jpa.showSql	 					        = false

jpa.hibernate.dialect			        = hu.interconnect.util.MySQL5BitBooleanDialect
jpa.hibernate.hbm2ddl		        	= validate
jpa.hibernate.default_schema        	= hr_hudson_mysql
jpa.hibernate.id.new_generator_mappings = false

allowcorsfilter					        = false
mail.deflect					        = true
mail.deflect.to					        = fake@test.address

mail.host					        	= localhost
mail.port					        	= 1
mail.username				        	=
mail.password				        	=
mail.smtp.auth				        	=
mail.smtp.starttls.enable	        	=
mail.subject.prefix			        	=
mail.from					        	=
mail.support.to				        	=
mail.support.buffersize		        	=

#connection pool

#The SQL query that will be used to validate connections from this pool before returning them to the caller. If specified, this query MUST be an SQL SELECT statement that returns at least one row.
jdbc.validationQuery			        = SELECT 1
#The indication of whether objects will be validated before being borrowed from the pool. If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another.
jdbc.testOnBorrow				        = true
#The initial number of connections that are created when the pool is started.
jdbc.initialSize				        = 2
#The maximum number of active connections that can be allocated from this pool at the same time, or non-positive for no limit.
jdbc.maxActive					        = 5
#The maximum number of connections that can remain idle in the pool, without extra ones being released, or negative for no limit.
jdbc.maxIdle					        = 5
#The maximum number of milliseconds that the pool will wait (when there are no available connections) for a connection to be returned before throwing an exception, or -1 to wait indefinitely.
jdbc.maxWait				        	= 60000
#The minimum number of active connections that can remain idle in the pool, without extra ones being created, or 0 to create none.
jdbc.minIdle				        	= 2

jdbc.connectionInitSqls0	        	= select 1 from dual;
jdbc.connectionInitSqls1	        	=
jdbc.connectionInitSqls2	        	=
jdbc.connectionInitSqls3	        	=
jdbc.connectionInitSqls4        		=