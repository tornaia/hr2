<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>hu.interconnect</groupId>
	<artifactId>hr2</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>HR2</name>
	<description>Human Resource Software System</description>
	<url>https://www.interconnect.hu/hr/index.php</url>
	
	<organization>
		<name>Interconnect Magyarorsz√°g Kft.</name>
		<url>https://interconnect.hu/</url>
	</organization>
	
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	
	<issueManagement>
		<url>https://github.com/tornaia/hr2/issues</url>
		<system>HR2 Issues</system>
	</issueManagement>
	
	<scm>
		<url>https://github.com/tornaia/hr2</url>
		<connection>scm:git:git://github.com/tornaia/hr2.git</connection>
		<developerConnection>scm:git:git@github.com:tornaia/hr2.git</developerConnection>
	</scm>
	
	<developers>
		<developer>
			<email>tornai.andras.ede@gmail.com</email>
			<name>Andras Tornai</name>
			<url>https://github.com/tornaia</url>
			<id>tornaia</id>
		</developer>
	</developers>

	<modules>
		<module>hr2-java-parent</module>
		<module>hr2-angular-ui</module>
		<module>hr2-war-config</module>
		<module>hr2-war</module>
		<module>hr2-e2etest</module>
	</modules>

	<properties>
		<file.encoding>UTF-8</file.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		
   		<!-- Sonar -->
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
		<coverage.reports.dir>${project.basedir}/../target/coverage-reports</coverage.reports.dir>
		<sonar.jacoco.reportPath>${coverage.reports.dir}/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${coverage.reports.dir}/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.javascript.lcov.reportPath>${project.basedir}/reports/coverage/lcov.info</sonar.javascript.lcov.reportPath>
		<sonar.genericcoverage.unitTestReportPaths>${project.basedir}/reports/ut_report.xml</sonar.genericcoverage.unitTestReportPaths>
		<sonar.exclusions>file:**/dependencies/**</sonar.exclusions>
		
		<!-- Top level dependencies -->
		<spring-boot-starter-web.version>1.2.7.RELEASE</spring-boot-starter-web.version>
		<springframework.version>4.2.2.RELEASE</springframework.version>
		<springsecurity.version>4.0.2.RELEASE</springsecurity.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<junit.version>4.12</junit.version>
		
		<!-- Plugin -->
		<maven-jar-plugin.version>2.4</maven-jar-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
		<jacoco-maven-plugin.version>0.7.5.201505241946</jacoco-maven-plugin.version>
		<jetty-maven-plugin.version>9.3.5.v20151012</jetty-maven-plugin.version>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot-starter-web.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
		
		</dependencies>
	</dependencyManagement>
	<!--profiles>
		<profile>
			<id>with-integration-tests</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>hr2-endtoendtest</module>
			</modules>
		</profile>

		<profile>
			<id>without-integration-tests</id>
			<activation>
				<property>
					<name>integration-tests</name>
					<value>false</value>
				</property>
			</activation>
		</profile>
	</profiles-->

	<build>
		<pluginManagement>

			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<fork>true</fork>
					</configuration>
				</plugin>
				
	            <plugin>
	                <groupId>org.eclipse.jetty</groupId>
	                <artifactId>jetty-maven-plugin</artifactId>
	                <version>${jetty-maven-plugin.version}</version>
	            </plugin>
            
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<includes>
							<include>hu.interconnect.*</include>
						</includes>
					</configuration>
					<executions>
						<!--
							Prepares the property pointing to the JaCoCo runtime agent which
							is passed as VM argument when Maven the Surefire plugin is executed.
						-->
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${sonar.jacoco.reportPath}</destFile>
								<!--
									Sets the name of the property containing the settings
									for JaCoCo runtime agent.
								-->
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
						<!--
							Ensures that the code coverage report for unit tests is created after
							unit tests have been run.
						-->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${sonar.jacoco.reportPath}</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${coverage.reports.dir}/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<!--
							Prepares the property pointing to the JaCoCo runtime agent which
							is passed as VM argument when Maven the Failsafe plugin is executed.
						-->
						<execution>
							<id>pre-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${sonar.jacoco.itReportPath}</destFile>
								<!--
									Sets the name of the property containing the settings
									for JaCoCo runtime agent.
								-->
								<propertyName>failsafeArgLine</propertyName>
							</configuration>
						</execution>
						<!--
							Ensures that the code coverage report for integration tests after
							integration tests have been run.
						-->
						<execution>
							<id>post-integration-test</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${sonar.jacoco.itReportPath}</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${coverage.reports.dir}/jacoco-it</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- UT coverage -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
						<!-- Skips unit tests if the value of skip.unit.tests property is true -->
						<skipTests>${skip.unit.tests}</skipTests>
						<!-- Excludes integration tests when unit tests are run. -->
						<excludes>
							<exclude>**/**IntTest.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				
				<!-- IT coverage -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<executions>
						<!--
							Ensures that both integration-test and verify goals of the Failsafe Maven
							plugin are executed.
						-->
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<includes>
									<include>**/*IntTest.java</include>
									<include>**/*EndToEndTest.java</include>
								</includes>
								<!-- Sets the VM argument line used when integration tests are run. -->
								<argLine>${failsafeArgLine}</argLine>
								<!--
									Skips integration tests if the value of skip.integration.tests property
									is true
								-->
								<skipTests>${skip.integration.tests}</skipTests>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
			</plugins>
			
		</pluginManagement>
	</build>

</project>
