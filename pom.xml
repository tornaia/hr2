<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hu.interconnect</groupId>
    <artifactId>hr2</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>HR2</name>
    <description>Human Resource Software System</description>
    <url>https://www.interconnect.hu/hr/index.php</url>

    <organization>
        <name>Interconnect Magyarorsz√°g Kft.</name>
        <url>https://interconnect.hu/</url>
    </organization>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <issueManagement>
        <url>https://github.com/tornaia/hr2/issues</url>
        <system>HR2 Issues</system>
    </issueManagement>

    <scm>
        <url>https://github.com/tornaia/hr2</url>
        <connection>scm:git:git://github.com/tornaia/hr2.git</connection>
        <developerConnection>scm:git:git@github.com:tornaia/hr2.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <email>tornai.andras.ede@gmail.com</email>
            <name>Andras Tornai</name>
            <url>https://github.com/tornaia</url>
            <id>tornaia</id>
        </developer>
    </developers>

    <modules>
        <module>hr2-java-parent</module>
        <module>hr2-angular-ui</module>
        <module>hr2-war-config</module>
        <module>hr2-war</module>
    </modules>

    <properties>
        <file.encoding>UTF-8</file.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <!-- Sonar -->
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <coverage.reports.dir>${project.basedir}/../target/coverage-reports</coverage.reports.dir>
        <sonar.jacoco.reportPaths>${coverage.reports.dir}/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.javascript.lcov.reportPaths>${project.basedir}/target/coverage/lcov.info</sonar.javascript.lcov.reportPaths>
        <sonar.exclusions>file:**/dependencies/**</sonar.exclusions>

        <!-- Top level dependencies -->
        <spring-boot-starter-web.version>1.2.7.RELEASE</spring-boot-starter-web.version>
        <springframework.version>4.2.2.RELEASE</springframework.version>
        <springsecurity.version>4.0.2.RELEASE</springsecurity.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>

        <!-- Plugin -->
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.7.8</jacoco-maven-plugin.version>
        <jetty-maven-plugin.version>9.3.7.v20160115</jetty-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${springframework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${springsecurity.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot-starter-web.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>with-e2etest</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>hr2-e2etest</module>
            </modules>
        </profile>

        <profile>
            <id>without-e2etest</id>
            <activation>
                <property>
                    <name>e2e-tests</name>
                    <value>false</value>
                </property>
            </activation>
        </profile>

        <profile>
            <id>full-clean</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>./</directory>
                                    <includes>
                                        <include>target/**</include>
                                        <include>bin/**</include>
                                        <include>dist/**</include>
                                        <include>.tmp/**</include>
                                        <include>PhantomJS_*/**</include>
                                        <include>bower_components/**</include>
                                        <include>node/**</include>
                                        <include>node_modules/**</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>

            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>./</directory>
                                <includes>
                                    <include>target/**</include>
                                    <include>bin/**</include>
                                    <include>dist/**</include>
                                    <include>.tmp/**</include>
                                    <include>PhantomJS_*/**</include>
                                </includes>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <fork>true</fork>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>hu.interconnect.*</include>
                            <include>test.integration.*</include>
                            <include>test.unit.*</include>
                        </includes>
                        <append>true</append>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${sonar.jacoco.reportPaths}</destFile>
                                <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${sonar.jacoco.reportPaths}</dataFile>
                                <outputDirectory>${coverage.reports.dir}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                     </executions>
                </plugin>

                <!-- Coverage -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <argLine>${surefireArgLine}</argLine>
                        <skipTests>${skip.unit.tests}</skipTests>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
